package com.dbkj.meet.model;

import com.dbkj.meet.model.base.BaseFixedMeet;
import com.dbkj.meet.model.common.DaoUtil;
import com.dbkj.meet.utils.SqlUtil;
import com.jfinal.plugin.activerecord.Db;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class FixedMeet extends BaseFixedMeet<FixedMeet> {
	public static final FixedMeet dao = new FixedMeet();

	public int deleteByCompanyId(long id){
		return Db.update(SqlUtil.getSql("deleteByCompanyId",this),id);
	}

	public List<FixedMeet> getUsedPassword(){
		return find(SqlUtil.getSql("getUsedPassword",this));
	}


	public FixedMeet findByMeetId(String meetId){
		return findFirst(SqlUtil.getSql("findByMeetId",this),meetId);
	}

	public FixedMeet findFixedMeet(Map<String,Object> map){
		List<Object> params=new ArrayList<>();
		StringBuilder where=new StringBuilder(100);
		DaoUtil.getCondition(map,where,params);
		where.append(" LIMIT 0,1");
		return findFirst(SqlUtil.getSql("findFixedMeet",this).concat(where.toString()),params.toArray());
	}

	public List<FixedMeet> getFixedMeetList(Map<String,Object> map){
		List<Object> params=new ArrayList<>();
		StringBuilder where=new StringBuilder(100);
		DaoUtil.getCondition(map,where,params);
		return find(SqlUtil.getSql("findFixedMeet",this).concat(where.toString()),params.toArray());
	}
}
