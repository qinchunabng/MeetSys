package com.dbkj.meet.model;

import com.dbkj.meet.model.base.BaseSchedule;
import com.dbkj.meet.model.common.DaoUtil;
import com.dbkj.meet.utils.SqlUtil;
import com.jfinal.plugin.activerecord.Db;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Schedule extends BaseSchedule<Schedule> {
	public static final Schedule dao = new Schedule();

	public int deleteByCompanyId(long id){
		return Db.update(SqlUtil.getSql("deleteByCompanyId",this),id);
	}

	public List<Schedule> findByCompanyId(long id){
		return find(SqlUtil.getSql("findByCompanyId",this),id);
	}

	public Schedule findByOrderMeetIdAndJobName(long oid,String jobName){
		return findFirst(SqlUtil.getSql("findByOrderMeetIdAndJobName",this),oid,jobName);
	}

	public Schedule getSchedule(Map<String,Object> map){
		List<Object> params=new ArrayList<>();
		StringBuilder where=new StringBuilder(100);
		DaoUtil.getCondition(map,where,params);
		where.append(" LIMIT 0,1");
		return  findFirst(SqlUtil.getSql("findSchedule",this).concat(where.toString()),params.toArray());
	}

	public List<Schedule> getScheduleList(Map<String,Object> map){
		List<Object> params=new ArrayList<>();
		StringBuilder where=new StringBuilder(100);
		DaoUtil.getCondition(map,where,params);
		return  find(SqlUtil.getSql("findSchedule",this).concat(where.toString()),
				params.toArray(new Object[params.size()]));
	}


	public int deleteByOrderMeetId(long oid){
		return Db.update(SqlUtil.getSql("deleteByOrderMeetId",this),oid);
	}
}
